//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class BasicObject : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal BasicObject(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(BasicObject obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~BasicObject() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          swigdemolibPINVOKE.delete_BasicObject(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public BasicObject() : this(swigdemolibPINVOKE.new_BasicObject(), true) {
  }

  public void sayHello() {
    swigdemolibPINVOKE.BasicObject_sayHello(swigCPtr);
  }

  public int multiply(int a, int b) {
    int ret = swigdemolibPINVOKE.BasicObject_multiply(swigCPtr, a, b);
    return ret;
  }

  public string getBackFirstChar(string str) {
    string ret = swigdemolibPINVOKE.BasicObject_getBackFirstChar(swigCPtr, str);
    if (swigdemolibPINVOKE.SWIGPendingException.Pending) throw swigdemolibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setNumber(int number) {
    swigdemolibPINVOKE.BasicObject_setNumber(swigCPtr, number);
  }

  public int getNumber() {
    int ret = swigdemolibPINVOKE.BasicObject_getNumber(swigCPtr);
    return ret;
  }

  public static int getNumberStatic(BasicObject obj) {
    int ret = swigdemolibPINVOKE.BasicObject_getNumberStatic(BasicObject.getCPtr(obj));
    if (swigdemolibPINVOKE.SWIGPendingException.Pending) throw swigdemolibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int getSum(IntVector nums) {
    int ret = swigdemolibPINVOKE.BasicObject_getSum(swigCPtr, IntVector.getCPtr(nums));
    if (swigdemolibPINVOKE.SWIGPendingException.Pending) throw swigdemolibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void BeFancy(CallbackObj callbackObj) {
    swigdemolibPINVOKE.BasicObject_BeFancy(swigCPtr, CallbackObj.getCPtr(callbackObj));
  }

}
